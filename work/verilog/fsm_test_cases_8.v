/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module fsm_test_cases_8 (
    input [0:0] buttons,
    input [0:0] achange,
    input [15:0] manual,
    input [0:0] switch,
    input [5:0] alufnvalue,
    input clk,
    input rst,
    output reg [3:0] casenumber,
    output reg [2:0] out_component,
    output reg [15:0] out_result,
    output reg [2:0] zvn,
    output reg [6:0] overflow
  );
  
  
  
  wire [16-1:0] M_alu_system_c;
  wire [3-1:0] M_alu_system_zvn;
  reg [16-1:0] M_alu_system_a;
  reg [16-1:0] M_alu_system_b;
  reg [6-1:0] M_alu_system_alufn_signal;
  alu_15 alu_system (
    .a(M_alu_system_a),
    .b(M_alu_system_b),
    .alufn_signal(M_alu_system_alufn_signal),
    .c(M_alu_system_c),
    .zvn(M_alu_system_zvn)
  );
  
  wire [3-1:0] M_showcomponent_address;
  reg [6-1:0] M_showcomponent_alufnvalue;
  show_component_16 showcomponent (
    .alufnvalue(M_showcomponent_alufnvalue),
    .address(M_showcomponent_address)
  );
  
  reg [15:0] M_recordA_d, M_recordA_q = 1'h0;
  
  reg [2:0] M_component_d, M_component_q = 1'h0;
  
  
  localparam AMANUAL_fsmtest = 4'd0;
  localparam BMANUAL_fsmtest = 4'd1;
  localparam CASE1_fsmtest = 4'd2;
  localparam CASE2_fsmtest = 4'd3;
  localparam CASE3_fsmtest = 4'd4;
  localparam CASE4_fsmtest = 4'd5;
  localparam CASE5_fsmtest = 4'd6;
  localparam CASE6_fsmtest = 4'd7;
  localparam CASE7_fsmtest = 4'd8;
  localparam CASE8_fsmtest = 4'd9;
  localparam CASE9_fsmtest = 4'd10;
  
  reg [3:0] M_fsmtest_d, M_fsmtest_q = AMANUAL_fsmtest;
  
  localparam SLOWCLOCK_SIZE = 5'h1e;
  
  wire [30-1:0] M_slowClock_value;
  counter_17 slowClock (
    .clk(clk),
    .rst(rst),
    .value(M_slowClock_value)
  );
  
  wire [1-1:0] M_slowClockEdge_out;
  reg [1-1:0] M_slowClockEdge_in;
  edge_detector_5 slowClockEdge (
    .clk(clk),
    .in(M_slowClockEdge_in),
    .out(M_slowClockEdge_out)
  );
  
  localparam A1 = 16'h0005;
  
  localparam B1 = 16'h00ca;
  
  localparam A2 = 16'h7fff;
  
  localparam B2 = 16'h4001;
  
  localparam A3 = 16'h8000;
  
  localparam B3 = 16'h8001;
  
  localparam A4 = 16'h71ac;
  
  localparam B4 = 16'h1d64;
  
  localparam A5 = 16'h85a7;
  
  localparam B5 = 16'h4a45;
  
  localparam A6 = 16'h11b7;
  
  localparam B6 = 16'h3311;
  
  localparam A7 = 16'h11b7;
  
  localparam B7 = 16'h11b7;
  
  localparam A8 = 16'h3311;
  
  localparam B8 = 16'h11b7;
  
  reg [3:0] cn;
  
  reg [15:0] c;
  
  reg [0:0] v;
  
  reg [6:0] o;
  
  always @* begin
    M_fsmtest_d = M_fsmtest_q;
    M_component_d = M_component_q;
    M_recordA_d = M_recordA_q;
    
    M_alu_system_a = 16'h0000;
    M_alu_system_b = 16'h0000;
    M_alu_system_alufn_signal = alufnvalue;
    M_showcomponent_alufnvalue = alufnvalue;
    cn = 4'h0;
    M_slowClockEdge_in = M_slowClock_value[29+0-:1];
    
    case (M_fsmtest_q)
      AMANUAL_fsmtest: begin
        M_recordA_d = manual;
        if (buttons) begin
          M_fsmtest_d = CASE1_fsmtest;
        end else begin
          if (switch == 1'h1) begin
            M_fsmtest_d = BMANUAL_fsmtest;
          end
        end
      end
      BMANUAL_fsmtest: begin
        M_alu_system_a = M_recordA_q;
        M_alu_system_b = manual;
        M_alu_system_alufn_signal = alufnvalue;
        M_showcomponent_alufnvalue = alufnvalue;
        M_component_d = M_showcomponent_address;
        if (buttons) begin
          M_fsmtest_d = CASE1_fsmtest;
        end else begin
          if (switch == 1'h0) begin
            M_fsmtest_d = AMANUAL_fsmtest;
          end
        end
      end
      CASE1_fsmtest: begin
        if (achange == 1'h0) begin
          M_alu_system_a = 16'h0005;
        end else begin
          M_alu_system_a = 17'h00006;
        end
        M_alu_system_b = 16'h00ca;
        M_alu_system_alufn_signal = alufnvalue;
        M_showcomponent_alufnvalue = alufnvalue;
        M_component_d = M_showcomponent_address;
        cn = 4'h0;
        if (buttons) begin
          M_fsmtest_d = AMANUAL_fsmtest;
        end
        if (M_slowClockEdge_out == 1'h1) begin
          M_fsmtest_d = CASE2_fsmtest;
        end
      end
      CASE2_fsmtest: begin
        if (achange == 1'h0) begin
          M_alu_system_a = 16'h7fff;
        end else begin
          M_alu_system_a = 17'h08000;
        end
        M_alu_system_b = 16'h4001;
        M_alu_system_alufn_signal = alufnvalue;
        M_showcomponent_alufnvalue = alufnvalue;
        M_component_d = M_showcomponent_address;
        cn = 4'h1;
        if (buttons) begin
          M_fsmtest_d = AMANUAL_fsmtest;
        end
        if (M_slowClockEdge_out == 1'h1) begin
          M_fsmtest_d = CASE3_fsmtest;
        end
      end
      CASE3_fsmtest: begin
        if (achange == 1'h0) begin
          M_alu_system_a = 16'h8000;
        end else begin
          M_alu_system_a = 17'h08001;
        end
        M_alu_system_b = 16'h8001;
        M_alu_system_alufn_signal = alufnvalue;
        M_showcomponent_alufnvalue = alufnvalue;
        M_component_d = M_showcomponent_address;
        cn = 4'h2;
        if (buttons) begin
          M_fsmtest_d = AMANUAL_fsmtest;
        end
        if (M_slowClockEdge_out == 1'h1) begin
          M_fsmtest_d = CASE4_fsmtest;
        end
      end
      CASE4_fsmtest: begin
        if (achange == 1'h0) begin
          M_alu_system_a = 16'h71ac;
        end else begin
          M_alu_system_a = 17'h071ad;
        end
        M_alu_system_b = 16'h1d64;
        M_alu_system_alufn_signal = alufnvalue;
        M_showcomponent_alufnvalue = alufnvalue;
        M_component_d = M_showcomponent_address;
        cn = 4'h3;
        if (buttons) begin
          M_fsmtest_d = AMANUAL_fsmtest;
        end
        if (M_slowClockEdge_out == 1'h1) begin
          M_fsmtest_d = CASE5_fsmtest;
        end
      end
      CASE5_fsmtest: begin
        if (achange == 1'h0) begin
          M_alu_system_a = 16'h85a7;
        end else begin
          M_alu_system_a = 17'h085a8;
        end
        M_alu_system_b = 16'h4a45;
        M_alu_system_alufn_signal = alufnvalue;
        M_showcomponent_alufnvalue = alufnvalue;
        M_component_d = M_showcomponent_address;
        cn = 4'h4;
        if (buttons) begin
          M_fsmtest_d = AMANUAL_fsmtest;
        end
        if (M_slowClockEdge_out == 1'h1) begin
          M_fsmtest_d = CASE6_fsmtest;
        end
      end
      CASE6_fsmtest: begin
        if (achange == 1'h0) begin
          M_alu_system_a = 16'h11b7;
        end else begin
          M_alu_system_a = 17'h011b8;
        end
        M_alu_system_b = 16'h3311;
        M_alu_system_alufn_signal = alufnvalue;
        M_showcomponent_alufnvalue = alufnvalue;
        M_component_d = M_showcomponent_address;
        cn = 4'h5;
        if (buttons) begin
          M_fsmtest_d = AMANUAL_fsmtest;
        end
        if (M_slowClockEdge_out == 1'h1) begin
          M_fsmtest_d = CASE7_fsmtest;
        end
      end
      CASE7_fsmtest: begin
        if (achange == 1'h0) begin
          M_alu_system_a = 16'h11b7;
        end else begin
          M_alu_system_a = 17'h011b8;
        end
        M_alu_system_b = 16'h11b7;
        M_alu_system_alufn_signal = alufnvalue;
        M_showcomponent_alufnvalue = alufnvalue;
        M_component_d = M_showcomponent_address;
        cn = 4'h6;
        if (buttons) begin
          M_fsmtest_d = AMANUAL_fsmtest;
        end
        if (M_slowClockEdge_out == 1'h1) begin
          M_fsmtest_d = CASE8_fsmtest;
        end
      end
      CASE8_fsmtest: begin
        if (achange == 1'h0) begin
          M_alu_system_a = 16'h3311;
        end else begin
          M_alu_system_a = 17'h03312;
        end
        M_alu_system_b = 16'h11b7;
        M_alu_system_alufn_signal = alufnvalue;
        M_showcomponent_alufnvalue = alufnvalue;
        M_component_d = M_showcomponent_address;
        cn = 4'h7;
        if (buttons) begin
          M_fsmtest_d = AMANUAL_fsmtest;
        end
        if (M_slowClockEdge_out == 1'h1) begin
          M_fsmtest_d = CASE1_fsmtest;
        end
      end
    endcase
    casenumber = cn;
    out_component = M_component_q;
    out_result = M_alu_system_c;
    zvn = M_alu_system_zvn;
    c = M_alu_system_c;
    v = M_alu_system_zvn[1+0-:1];
    o = 7'h7f;
    if (v == 1'h1 & c[15+0-:1] == 1'h0) begin
      o = 7'h48;
    end
    if (v == 1'h1 & c[15+0-:1] == 1'h1) begin
      o = 7'h0c;
    end
    overflow = o;
  end
  
  always @(posedge clk) begin
    M_fsmtest_q <= M_fsmtest_d;
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_recordA_q <= 1'h0;
    end else begin
      M_recordA_q <= M_recordA_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_component_q <= 1'h0;
    end else begin
      M_component_q <= M_component_d;
    end
  end
  
endmodule
